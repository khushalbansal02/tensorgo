{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\project2025\\\\frontend\\\\src\\\\pages\\\\Billing.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Heading, Text, VStack, HStack, Table, Thead, Tbody, Tr, Th, Td, Badge, useToast, Card, CardBody, Select, NumberInput, NumberInputField, NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper } from '@chakra-ui/react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport Layout from '../components/Layout/Layout';\nimport { API_URL, STRIPE_PUBLIC_KEY } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(STRIPE_PUBLIC_KEY);\nfunction CheckoutForm({\n  selectedPlan,\n  userCount,\n  organization,\n  onSuccess,\n  processing,\n  setProcessing\n}) {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const toast = useToast();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    try {\n      setProcessing(true);\n      const token = localStorage.getItem('token');\n\n      // Create subscription\n      const response = await axios.post(`${API_URL}/stripe/subscribe`, {\n        planId: selectedPlan,\n        quantity: userCount\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Confirm payment\n      const {\n        error\n      } = await stripe.confirmCardPayment(response.data.clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            email: organization.billingEmail\n          }\n        }\n      });\n      if (error) {\n        throw new Error(error.message);\n      }\n      toast({\n        title: 'Success',\n        description: 'Subscription updated successfully',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n      onSuccess();\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to process subscription',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        colorScheme: \"blue\",\n        isLoading: processing,\n        isDisabled: !stripe || !selectedPlan,\n        w: \"100%\",\n        children: \"Update Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"SHE9LyF/SnEgHgxKk3mZbB+/qeg=\", false, function () {\n  return [useStripe, useElements, useToast];\n});\n_c = CheckoutForm;\nexport default function Billing() {\n  _s2();\n  var _organization$plan;\n  const [organization, setOrganization] = useState(null);\n  const [plans, setPlans] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlan, setSelectedPlan] = useState('');\n  const [userCount, setUserCount] = useState(1);\n  const [processing, setProcessing] = useState(false);\n  const toast = useToast();\n  const fetchData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n      const [orgResponse, plansResponse, ordersResponse] = await Promise.all([axios.get(`${API_URL}/organizations`, {\n        headers\n      }), axios.get(`${API_URL}/plans`, {\n        headers\n      }), axios.get(`${API_URL}/organizations/orders`, {\n        headers\n      })]);\n      setOrganization(orgResponse.data);\n      setPlans(plansResponse.data);\n      setOrders(ordersResponse.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast({\n        title: 'Error',\n        description: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch billing data',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleCancelSubscription = async () => {\n    try {\n      setProcessing(true);\n      const token = localStorage.getItem('token');\n      await axios.post(`${API_URL}/stripe/cancel`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast({\n        title: 'Success',\n        description: 'Subscription cancelled successfully',\n        status: 'success',\n        duration: 5000,\n        isClosable: true\n      });\n      fetchData();\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast({\n        title: 'Error',\n        description: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to cancel subscription',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      maxW: \"container.xl\",\n      mx: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 8,\n        align: \"stretch\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: \"Billing & Subscription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"stretch\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: \"Current Plan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontWeight: \"bold\",\n                    children: ((_organization$plan = organization.plan) === null || _organization$plan === void 0 ? void 0 : _organization$plan.name) || 'No Plan'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    color: \"gray.600\",\n                    children: organization.subscriptionStatus === 'trialing' ? `Trial ends in ${Math.ceil((new Date(organization.trialEndsAt) - new Date()) / (1000 * 60 * 60 * 24))} days` : `${organization.activeUsers} active users`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), organization.subscriptionStatus === 'active' && /*#__PURE__*/_jsxDEV(Button, {\n                  colorScheme: \"red\",\n                  variant: \"outline\",\n                  onClick: handleCancelSubscription,\n                  isLoading: processing,\n                  children: \"Cancel Subscription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"stretch\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: \"Change Plan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select plan\",\n                value: selectedPlan,\n                onChange: e => setSelectedPlan(e.target.value),\n                children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: plan._id,\n                  children: [plan.name, \" - \\u20B9\", plan.price, \"/user/year\"]\n                }, plan._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: \"Number of Users:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                  min: 1,\n                  max: 100,\n                  value: userCount,\n                  onChange: value => setUserCount(parseInt(value)),\n                  children: [/*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NumberInputStepper, {\n                    children: [/*#__PURE__*/_jsxDEV(NumberIncrementStepper, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(NumberDecrementStepper, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Elements, {\n                stripe: stripePromise,\n                children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n                  selectedPlan: selectedPlan,\n                  userCount: userCount,\n                  organization: organization,\n                  onSuccess: fetchData,\n                  processing: processing,\n                  setProcessing: setProcessing\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"stretch\",\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                children: \"Order History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table, {\n                variant: \"simple\",\n                children: [/*#__PURE__*/_jsxDEV(Thead, {\n                  children: /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Plan\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Amount\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Th, {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n                  children: orders.map(order => /*#__PURE__*/_jsxDEV(Tr, {\n                    children: [/*#__PURE__*/_jsxDEV(Td, {\n                      children: new Date(order.createdAt).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: order.plan.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: [\"\\u20B9\", order.amount]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Td, {\n                      children: /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: order.status === 'completed' ? 'green' : order.status === 'pending' ? 'yellow' : 'red',\n                        children: order.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 25\n                    }, this)]\n                  }, order._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s2(Billing, \"XbSvYu7jqpPWkwdUCIu3y+sHG1c=\", false, function () {\n  return [useToast];\n});\n_c2 = Billing;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"Billing\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Heading","Text","VStack","HStack","Table","Thead","Tbody","Tr","Th","Td","Badge","useToast","Card","CardBody","Select","NumberInput","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","loadStripe","Elements","CardElement","useStripe","useElements","axios","Layout","API_URL","STRIPE_PUBLIC_KEY","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","selectedPlan","userCount","organization","onSuccess","processing","setProcessing","_s","stripe","elements","toast","handleSubmit","event","preventDefault","token","localStorage","getItem","response","post","planId","quantity","headers","Authorization","error","confirmCardPayment","data","clientSecret","payment_method","card","getElement","billing_details","email","billingEmail","Error","message","title","description","status","duration","isClosable","onSubmit","children","spacing","w","fileName","_jsxFileName","lineNumber","columnNumber","type","colorScheme","isLoading","isDisabled","_c","Billing","_s2","_organization$plan","setOrganization","plans","setPlans","orders","setOrders","loading","setLoading","setSelectedPlan","setUserCount","fetchData","orgResponse","plansResponse","ordersResponse","Promise","all","get","_error$response","_error$response$data","handleCancelSubscription","_error$response2","_error$response2$data","maxW","mx","align","size","justify","fontWeight","plan","name","color","subscriptionStatus","Math","ceil","Date","trialEndsAt","activeUsers","variant","onClick","placeholder","value","onChange","e","target","map","_id","price","min","max","parseInt","order","createdAt","toLocaleDateString","amount","_c2","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/project2025/frontend/src/pages/Billing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Badge,\n  useToast,\n  Card,\n  CardBody,\n  Select,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport Layout from '../components/Layout/Layout';\nimport { API_URL, STRIPE_PUBLIC_KEY } from '../config';\n\nconst stripePromise = loadStripe(STRIPE_PUBLIC_KEY);\n\nfunction CheckoutForm({ selectedPlan, userCount, organization, onSuccess, processing, setProcessing }) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const toast = useToast();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    if (!stripe || !elements) {\n      return;\n    }\n\n    try {\n      setProcessing(true);\n      const token = localStorage.getItem('token');\n      \n      // Create subscription\n      const response = await axios.post(\n        `${API_URL}/stripe/subscribe`,\n        {\n          planId: selectedPlan,\n          quantity: userCount,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n\n      // Confirm payment\n      const { error } = await stripe.confirmCardPayment(\n        response.data.clientSecret,\n        {\n          payment_method: {\n            card: elements.getElement(CardElement),\n            billing_details: {\n              email: organization.billingEmail,\n            },\n          },\n        }\n      );\n\n      if (error) {\n        throw new Error(error.message);\n      }\n\n      toast({\n        title: 'Success',\n        description: 'Subscription updated successfully',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n\n      onSuccess();\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to process subscription',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <VStack spacing={4}>\n        <Box w=\"100%\">\n          <CardElement />\n        </Box>\n        <Button\n          type=\"submit\"\n          colorScheme=\"blue\"\n          isLoading={processing}\n          isDisabled={!stripe || !selectedPlan}\n          w=\"100%\"\n        >\n          Update Subscription\n        </Button>\n      </VStack>\n    </form>\n  );\n}\n\nexport default function Billing() {\n  const [organization, setOrganization] = useState(null);\n  const [plans, setPlans] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPlan, setSelectedPlan] = useState('');\n  const [userCount, setUserCount] = useState(1);\n  const [processing, setProcessing] = useState(false);\n  const toast = useToast();\n\n  const fetchData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = { Authorization: `Bearer ${token}` };\n\n      const [orgResponse, plansResponse, ordersResponse] = await Promise.all([\n        axios.get(`${API_URL}/organizations`, { headers }),\n        axios.get(`${API_URL}/plans`, { headers }),\n        axios.get(`${API_URL}/organizations/orders`, { headers }),\n      ]);\n\n      setOrganization(orgResponse.data);\n      setPlans(plansResponse.data);\n      setOrders(ordersResponse.data);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Failed to fetch billing data',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleCancelSubscription = async () => {\n    try {\n      setProcessing(true);\n      const token = localStorage.getItem('token');\n      \n      await axios.post(\n        `${API_URL}/stripe/cancel`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` }\n        }\n      );\n\n      toast({\n        title: 'Success',\n        description: 'Subscription cancelled successfully',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n      });\n\n      fetchData();\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Failed to cancel subscription',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  if (loading) {\n    return <Layout>Loading...</Layout>;\n  }\n\n  return (\n    <Layout>\n      <Box maxW=\"container.xl\" mx=\"auto\">\n        <VStack spacing={8} align=\"stretch\">\n          <Heading size=\"lg\">Billing & Subscription</Heading>\n\n          {/* Current Plan */}\n          <Card>\n            <CardBody>\n              <VStack align=\"stretch\" spacing={4}>\n                <Heading size=\"md\">Current Plan</Heading>\n                <HStack justify=\"space-between\">\n                  <Box>\n                    <Text fontWeight=\"bold\">{organization.plan?.name || 'No Plan'}</Text>\n                    <Text color=\"gray.600\">\n                      {organization.subscriptionStatus === 'trialing'\n                        ? `Trial ends in ${Math.ceil((new Date(organization.trialEndsAt) - new Date()) / (1000 * 60 * 60 * 24))} days`\n                        : `${organization.activeUsers} active users`}\n                    </Text>\n                  </Box>\n                  {organization.subscriptionStatus === 'active' && (\n                    <Button\n                      colorScheme=\"red\"\n                      variant=\"outline\"\n                      onClick={handleCancelSubscription}\n                      isLoading={processing}\n                    >\n                      Cancel Subscription\n                    </Button>\n                  )}\n                </HStack>\n              </VStack>\n            </CardBody>\n          </Card>\n\n          {/* Change Plan */}\n          <Card>\n            <CardBody>\n              <VStack align=\"stretch\" spacing={4}>\n                <Heading size=\"md\">Change Plan</Heading>\n                <Select\n                  placeholder=\"Select plan\"\n                  value={selectedPlan}\n                  onChange={(e) => setSelectedPlan(e.target.value)}\n                >\n                  {plans.map(plan => (\n                    <option key={plan._id} value={plan._id}>\n                      {plan.name} - ₹{plan.price}/user/year\n                    </option>\n                  ))}\n                </Select>\n                <HStack>\n                  <Text>Number of Users:</Text>\n                  <NumberInput\n                    min={1}\n                    max={100}\n                    value={userCount}\n                    onChange={(value) => setUserCount(parseInt(value))}\n                  >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                </HStack>\n                <Elements stripe={stripePromise}>\n                  <CheckoutForm\n                    selectedPlan={selectedPlan}\n                    userCount={userCount}\n                    organization={organization}\n                    onSuccess={fetchData}\n                    processing={processing}\n                    setProcessing={setProcessing}\n                  />\n                </Elements>\n              </VStack>\n            </CardBody>\n          </Card>\n\n          {/* Order History */}\n          <Card>\n            <CardBody>\n              <VStack align=\"stretch\" spacing={4}>\n                <Heading size=\"md\">Order History</Heading>\n                <Table variant=\"simple\">\n                  <Thead>\n                    <Tr>\n                      <Th>Date</Th>\n                      <Th>Plan</Th>\n                      <Th>Amount</Th>\n                      <Th>Status</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {orders.map(order => (\n                      <Tr key={order._id}>\n                        <Td>{new Date(order.createdAt).toLocaleDateString()}</Td>\n                        <Td>{order.plan.name}</Td>\n                        <Td>₹{order.amount}</Td>\n                        <Td>\n                          <Badge\n                            colorScheme={\n                              order.status === 'completed' ? 'green' :\n                              order.status === 'pending' ? 'yellow' :\n                              'red'\n                            }\n                          >\n                            {order.status}\n                          </Badge>\n                        </Td>\n                      </Tr>\n                    ))}\n                  </Tbody>\n                </Table>\n              </VStack>\n            </CardBody>\n          </Card>\n        </VStack>\n      </Box>\n    </Layout>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}